package loudness

import (
	"math"
)

const (
	FreqBins = 1024
	Channels = 83
)

var (
	loudX = []float64{
		20., 25., 31.5, 40., 50., 63., 80., 100., 125., 160.,
		200., 250., 315., 400., 500., 630., 800., 1000., 1250., 1600.,
		2000., 2500., 3150., 4000., 5000., 6300., 8000., 10000., 12500.,
	}

	afVec = []float64{0.532, 0.506, 0.480, 0.455, 0.432, 0.409, 0.387, 0.367, 0.349, 0.330,
		0.315, 0.301, 0.288, 0.276, 0.267, 0.259, 0.253, 0.250, 0.246, 0.244,
		0.243, 0.243, 0.243, 0.242, 0.242, 0.245, 0.254, 0.271, 0.301}

	luVec = []float64{-31.6, -27.2, -23.0, -19.1, -15.9, -13.0, -10.3, -8.1, -6.2, -4.5,
		-3.1, -2.0, -1.1, -0.4, 0.0, 0.3, 0.5, 0.0, -2.7, -4.1, -1.0, 1.7,
		2.5, 1.2, -2.1, -7.1, -11.2, -10.7, -3.1}

	tfVec = []float64{78.5, 68.7, 59.5, 51.1, 44.0, 37.5, 31.5, 26.5, 22.1, 17.9, 14.4,
		11.4, 8.6, 6.2, 4.4, 3.0, 2.2, 2.4, 3.5, 1.7, -1.3, -4.2, -6.0,
		-5.4, -1.5, 6.0, 12.6, 13.9, 12.3}

	loudC = [][][]float64{
		{
			{-1.64819506e-06, 4.57648236e-04, -1.05961622e-03},
			{-1.64819506e-06, 4.57648236e-04, -1.05961622e-03},
			{-1.81339013e-06, 1.86256331e-04, -5.79805927e-04},
			{-1.59600013e-07, 1.05574947e-04, -1.34004391e-04},
			{-1.72548504e-07, 5.78361204e-05, -1.26809992e-04},
			{-2.13466493e-07, 1.12543319e-05, -3.59581919e-05},
			{2.28563467e-08, 1.09858601e-05, -1.83886270e-05},
			{-7.06085723e-08, 2.40194701e-06, -8.33901763e-06},
			{5.21405148e-09, 3.86915459e-06, -6.11827507e-06},
			{-1.56861922e-08, -6.04669022e-07, 2.07986288e-07},
			{4.09007258e-11, 8.00019007e-07, -1.60811033e-06},
			{-2.31762629e-09, 1.06227952e-07, -1.38272538e-08},
			{-5.96826081e-11, 4.74585521e-08, -2.37824883e-07},
			{-7.44328626e-10, 6.58156154e-08, -6.15443918e-08},
			{2.03584482e-12, 4.85365377e-09, -2.91107967e-08},
			{-4.60096415e-11, -5.57743044e-09, -1.01401122e-08},
			{-1.60098414e-10, -4.22497071e-08, 2.33703009e-09},
			{7.95072874e-11, 6.44714204e-08, -5.77119835e-08},
			{-3.28639746e-11, 4.16267216e-09, 2.73733027e-08},
			{6.04926892e-12, -2.44849846e-08, 4.27924794e-10},
			{-3.72002545e-12, 3.05262385e-09, 7.72666727e-10},
			{-3.13580583e-13, 7.38200316e-10, -2.88282052e-10},
			{8.97586750e-13, 3.34936403e-10, -2.31783141e-10},
			{4.81812140e-15, 2.09356428e-10, -2.22200675e-10},
			{9.68351764e-15, 2.24462540e-10, -5.08226199e-10},
			{-3.64978485e-14, 4.20808330e-11, -2.35782063e-11},
			{-1.11035308e-14, -2.44078959e-11, 1.11712084e-10},
			{-1.11035308e-14, -2.44078959e-11, 1.11712084e-10},
		},

		{
			{1.31543045e-04, -2.78856441e-02, 6.48415271e-02},
			{1.06820119e-04, -2.10209205e-02, 4.89472839e-02},
			{7.46803150e-05, -1.20967799e-02, 2.82847676e-02},
			{2.84388668e-05, -7.34724347e-03, 1.34997165e-02},
			{2.36508664e-05, -4.17999507e-03, 9.47958476e-03},
			{1.69214747e-05, -1.92438637e-03, 4.53399508e-03},
			{6.03468356e-06, -1.35041545e-03, 2.70012729e-03},
			{7.40606436e-06, -6.91263841e-04, 1.59680967e-03},
			{2.11042144e-06, -5.11117815e-04, 9.71383349e-04},
			{2.65789684e-06, -1.04856584e-04, 3.28964466e-04},
			{7.75553786e-07, -1.77416866e-04, 3.53922821e-04},
			{7.81688895e-07, -5.74140151e-05, 1.12706272e-04},
			{3.29751768e-07, -3.66995645e-05, 1.10009957e-04},
			{3.14532703e-07, -2.45976337e-05, 4.93646122e-05},
			{9.12341149e-08, -4.85294908e-06, 3.09012947e-05},
			{9.20280944e-08, -2.96002410e-06, 1.95480840e-05},
			{6.85631772e-08, -5.80451363e-06, 1.43766268e-05},
			{-2.74958712e-08, -3.11543379e-05, 1.57788448e-05},
			{3.21345944e-08, 1.71992274e-05, -2.75051428e-05},
			{-2.37257893e-09, 2.15700332e-05, 1.23682501e-06},
			{4.88654376e-09, -7.81194833e-06, 1.75033476e-06},
			{-6.93494405e-10, -3.23301256e-06, 2.90933485e-06},
			{-1.30497654e-09, -1.79352194e-06, 2.34718485e-06},
			{9.83869672e-10, -9.39434115e-07, 1.75613784e-06},
			{9.98324037e-10, -3.11364831e-07, 1.08953581e-06},
			{1.03608976e-09, 5.64039075e-07, -8.92546363e-07},
			{8.49950728e-10, 7.78651324e-07, -1.01279521e-06},
			{7.83329543e-10, 6.32203948e-07, -3.42522709e-07},
		},

		{
			{-5.81651035e-03, 1.00798701e+00, -2.25771723e+00},
			{-4.62469453e-03, 7.63454192e-01, -1.68877318e+00},
			{-3.44494171e-03, 5.48189139e-01, -1.18676484e+00},
			{-2.56842867e-03, 3.82914940e-01, -8.31596726e-01},
			{-2.04753133e-03, 2.67642555e-01, -6.01803713e-01},
			{-1.52009090e-03, 1.88285596e-01, -4.19627175e-01},
			{-1.12983621e-03, 1.32613965e-01, -2.96647095e-01},
			{-8.61021251e-04, 9.17803791e-02, -2.10708356e-01},
			{-6.23109106e-04, 6.17208377e-02, -1.46503530e-01},
			{-4.56217966e-04, 4.01617338e-02, -1.00991357e-01},
			{-3.18879941e-04, 2.88707958e-02, -7.36758652e-02},
			{-2.41017807e-04, 1.71292517e-02, -5.03444106e-02},
			{-1.68774164e-04, 1.10118691e-02, -3.58678557e-02},
			{-1.14009984e-04, 5.80160722e-03, -2.23210173e-02},
			{-7.34333023e-05, 2.85654894e-03, -1.42944266e-02},
			{-4.96092150e-05, 1.84086243e-03, -7.73600739e-03},
			{-2.23086989e-05, 3.50891011e-04, -1.96880656e-03},
			{-1.40952377e-05, -7.04087930e-03, 4.06228776e-03},
			{-1.29355569e-05, -1.05296569e-02, 1.13071327e-03},
			{-2.51885145e-06, 3.03958427e-03, -8.06319797e-03},
			{-1.51326552e-06, 8.54281820e-03, -6.86833406e-03},
			{5.83259159e-07, 3.02033776e-03, -4.53849926e-03},
			{-7.15746955e-07, -2.46909665e-04, -1.12176145e-03},
			{-9.88687794e-07, -2.56992231e-03, 2.36606284e-03},
			{9.93505915e-07, -3.82072126e-03, 5.21173649e-03},
			{3.63824384e-06, -3.49224474e-03, 5.46782277e-03},
			{6.84451267e-06, -1.20967106e-03, 2.22874209e-03},
			{1.01110732e-05, 1.61203948e-03, -4.81893755e-04},
		},

		{
			{5.32000000e-01, -3.16000000e+01, 7.85000000e+01},
			{5.06000000e-01, -2.72000000e+01, 6.87000000e+01},
			{4.80000000e-01, -2.30000000e+01, 5.95000000e+01},
			{4.55000000e-01, -1.91000000e+01, 5.11000000e+01},
			{4.32000000e-01, -1.59000000e+01, 4.40000000e+01},
			{4.09000000e-01, -1.30000000e+01, 3.75000000e+01},
			{3.87000000e-01, -1.03000000e+01, 3.15000000e+01},
			{3.67000000e-01, -8.10000000e+00, 2.65000000e+01},
			{3.49000000e-01, -6.20000000e+00, 2.21000000e+01},
			{3.30000000e-01, -4.50000000e+00, 1.79000000e+01},
			{3.15000000e-01, -3.10000000e+00, 1.44000000e+01},
			{3.01000000e-01, -2.00000000e+00, 1.14000000e+01},
			{2.88000000e-01, -1.10000000e+00, 8.60000000e+00},
			{2.76000000e-01, -4.00000000e-01, 6.20000000e+00},
			{2.67000000e-01, 0.00000000e+00, 4.40000000e+00},
			{2.59000000e-01, 3.00000000e-01, 3.00000000e+00},
			{2.53000000e-01, 5.00000000e-01, 2.20000000e+00},
			{2.50000000e-01, 0.00000000e+00, 2.40000000e+00},
			{2.46000000e-01, -2.70000000e+00, 3.50000000e+00},
			{2.44000000e-01, -4.10000000e+00, 1.70000000e+00},
			{2.43000000e-01, -1.00000000e+00, -1.30000000e+00},
			{2.43000000e-01, 1.70000000e+00, -4.20000000e+00},
			{2.43000000e-01, 2.50000000e+00, -6.00000000e+00},
			{2.42000000e-01, 1.20000000e+00, -5.40000000e+00},
			{2.42000000e-01, -2.10000000e+00, -1.50000000e+00},
			{2.45000000e-01, -7.10000000e+00, 6.00000000e+00},
			{2.54000000e-01, -1.12000000e+01, 1.26000000e+01},
			{2.71000000e-01, -1.07000000e+01, 1.39000000e+01},
		},
	}
)

func loudInterp(f float64) (float64, float64, float64) {
	interval := 0
	for interval < len(loudX)-1 && f >= loudX[interval+1] {
		interval++
	}
	if interval == 0 || interval == len(loudX)-1 {
		return afVec[interval], luVec[interval], tfVec[interval]
	}

	af := 0.0
	lu := 0.0
	tf := 0.0
	for order := 0; order < len(loudC); order++ {
		if interval > len(loudC[order])-1 {
			interval = len(loudC[order]) - 1
		}
		iC := loudC[order][interval]
		fD := math.Pow(f-loudX[interval], float64(len(loudC)-order-1))
		af += iC[0] * fD
		lu += iC[1] * fD
		tf += iC[2] * fD
	}
	return af, lu, tf
}
func Phons2SPL(phons, freq float64) float64 {
	c0, c1, c2 := loudInterp(freq)
	af := 4.47e-3 * (math.Pow(10, 0.025*phons) - 1.15)
	af += math.Pow(0.4*math.Pow(10, (c2+c1)/10-9), c0)
	return (10/c0)*math.Log10(af) - c1 + 94
}
func SPL2Phons(spl, freq float64) float64 {
	c0, c1, c2 := loudInterp(freq)
	expf := func(x float64) float64 {
		return math.Pow(0.4*math.Pow(10, (x+c1)/10-9), c0)
	}
	bf := expf(spl) - expf(c2) + 0.005135
	return 40*math.Log10(bf) + 94
}
